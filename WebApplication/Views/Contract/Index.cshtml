@model IEnumerable<DataAccess.Models.Entity.ContractMembership>

@{ Layout = "~/Views/Shared/_Layout.cshtml"; }

<div class="row">
    <div class="col-md-2"> </div>
    <div class="col-md-8">
        <div class="box box-danger" style="margin-top:5%;">

            <div class="box-header">
                <h3 class="box-title">@ViewData["Title"]</h3>
                <div class="pull-right">
                    @Html.ButtonCreateNew("Contract")
                    @Html.ButtonImport("Contract")
                    @Html.ButtonImport("Contract")
                </div>
            </div>
            <hr />
            <div class="box-body table-responsive">

                <table id="ContractMembershipsDatatable" class="table table-bordered table-hover table-responsive stripe">
                    <thead>
                        <tr>
                            <th>Τίτλος</th>
                            <th>Ώρες / εβδομάδα</th>
                            <th>Ώρες / ημέρα</th>
                            <th>Εργ. ημ. εβδομάδας</th>
                            <th>Ρεπο εβδομάδας</th>
                            <th>Ιδιότητα</th>
                            <th>Τύπος</th>
                            <th>Καθαρός μισθός</th>
                            <th>Μικτός μισθός</th>
                            <th>Ενέργειες</th>
                        </tr>
                    </thead>
                    <tfoot>
                        <tr>
                            <th>Τίτλος</th>
                            <th>Ώρες / εβδομάδα</th>
                            <th>Ώρες / ημέρα</th>
                            <th>Εργ. ημ. εβδομάδας</th>
                            <th>Ρεπο εβδομάδας</th>
                            <th>Ιδιότητα</th>
                            <th>Τύπος</th>
                            <th>Καθαρός μισθός</th>
                            <th>Μικτός μισθός</th>
                            <th>Ενέργειες</th>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>
    <div class="col-md-2"> </div>

</div>
<partial name="_ExcelModals" model='new {Entity = "Employee" }'>

    @section Scripts {

        <script>
            $('#ContractMembershipsDatatable').DataTable({
                serverSide: true,
                responsive: true,
                processing: true,
                colReorder: true,
                lengthMenu: [[10, 25, 50, 100, 150, -1], [10, 25, 50, 100, 150, "Όλα"]],
                iDisplayLength: 150,
                dom: 'Bfrtlp',
                buttons: ['excel', 'pdf', 'print'],
                language: {
                    processing: '<i class="fa fa-spinner fa-spin fa-3x fa-fw"></i><span class="sr-only"></span> '
                },
                ajax: {
                    url: '/api/contracts/datatable',
                    type: 'POST',
                    contentType: "application/json",
                    data: (data, type, row, meta) => {
                        data.Predicate = 'ContractIndex'
                        return JSON.stringify(data);
                    }
                },
                order: [[0, 'desc']],
                columns: [
                    {
                        data: "Title",
                        searchable: true,
                        orderable: true,
                        render: (a, b, data, d) => {
                            console.log(data);
                            if (data.Title != null)
                                return data.Title;
                            else
                                return "";
                        }
                    },
                    {
                        data: "HoursPerWeek",
                        searchable: true,
                        orderable: true,
                        render: (a, b, data, d) => {
                            if (data.HoursPerWeek != null)
                                return data.HoursPerWeek;
                            else
                                return "";
                        }
                    },
                    {
                        data: "HoursPerDay",
                        searchable: true,
                        orderable: true,
                        render: (a, b, data, d) => {
                            if (data.HoursPerDay != null)
                                return data.HoursPerDay;
                            else
                                return "";
                        }
                    },
                    {
                        data: "WorkingDaysPerWeek",
                        searchable: true,
                        orderable: true,
                        render: (a, b, data, d) => {
                            if (data.WorkingDaysPerWeek != null)
                                return data.WorkingDaysPerWeek;
                            else
                                return "";
                        }
                    },
                    {
                        data: "DayOfDaysPerWeek",
                        searchable: true,
                        orderable: true,
                        render: (a, b, data, d) => {
                            if (data.DayOfDaysPerWeek != null)
                                return data.DayOfDaysPerWeek;
                            else
                                return "";
                        }
                    },
                    {
                        data: "ContractMembershipId",
                        searchable: false,
                        orderable: false,
                        render: (a, b, data, d) => {
                            if (data.ContractMembershipId != null)
                                return data.ContractMembershipId;
                            else
                                return "";
                        }
                    },
                    {
                        data: "ContractTypeId",
                        searchable: false,
                        orderable: false,
                        render: (a, b, data, d) => {
                            if (data.ContractTypeId != null)
                                return data.ContractTypeId;
                            else
                                return "";
                        }
                    },
                    {
                        data: "GrossSalaryPerHour",
                        searchable: false,
                        orderable: false,
                        render: (a, b, data, d) => {
                            if (data.GrossSalaryPerHour != null)
                                return data.GrossSalaryPerHour;
                            else
                                return "";
                        }
                    },
                    {
                        data: "NetSalaryPerHour",
                        searchable: false,
                        orderable: false,
                        render: (a, b, data, d) => {
                            if (data.NetSalaryPerHour != null)
                                return data.NetSalaryPerHour;
                            else
                                return "";
                        }
                    },
                    {
                        data: "Buttons",
                        searchable: false,
                        orderable: false,
                        render: (a, b, data, d) => {
                            if (data.Buttons != null)
                                return data.Buttons;
                            else
                                return "";
                        }
                    }
                ],
                createdRow: (row, data, dataIndex) => {
                    if (!data.IsActive) {
                        $(row).css('background-color', '#AAAFB4');
                    }
                }
            });</script>
    }
