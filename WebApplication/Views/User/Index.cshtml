@model DataAccess.ViewModels.ApplicationUserViewModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-md-3"> </div>
    <div class="col-md-6">



        <div class="box box-danger" style="margin-top:5%;">

            <div class="box-header">
                <h3 class="box-title">@ViewData["Title"]</h3>
                <div class="pull-right">
                    @Html.ButtonCreateNew("User")
                </div>
            </div>
            <hr />
            <table id="UsersDatatable" class="table table-bordered table-hover table-responsive stripe">
                <thead>
                    <tr>
                        <th>UserName</th>
                        <th>Email</th>
                        <th>Ενέργειες</th>
                    </tr>
                </thead>
                <tfoot>
                    <tr>
                        <th>UserName</th>
                        <th>Email</th>
                        <th>Ενέργειες</th>
                    </tr>
                </tfoot>
            </table>
        </div>
    </div>

    <div class="col-md-3"> </div>

</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        $('#UsersDatatable').DataTable({
            serverSide: true,
            responsive: true,
            processing: true,
            colReorder: false,
            lengthMenu: [[10, 25, 50, 100, 150, -1], [10, 25, 50, 100, 150, "Όλα"]],
            iDisplayLength: 150,
            dom: 'Bfrtlp',
            buttons: ['excel', 'pdf', 'print'],
            language: {
                processing: '<i class="fa fa-spinner fa-spin fa-3x fa-fw"></i><span class="sr-only"></span> '
            },
            "ajax": {
                url: '/api/users/datatable',
                type: 'POST',
                contentType: "application/json",
                data: (data, type, row, meta) => {
                    data.predicate = "UserIndex";
                    return JSON.stringify(data);
                }
            },
            order: [[0, 'desc']],
            columns: [
                {
                    data: "UserName",
                    searchable: true,
                    orderable: true,
                    render: (a, b, data, d) => {
                        if (data.UserName != null)
                            return data.UserName;
                        else
                            return "";
                    }

                },
                {
                    data: "Email",
                    searchable: true,
                    orderable: true,
                    render: (a, b, data, d) => {
                        if (data.Email != null)

                            return data.Email;
                        else
                            return "";
                    }
                },
                {
                    data: "Buttons",
                    searchable: false,
                    orderable: false,
                    render: (a, b, data, d) => {
                        if (data.Buttons != null)
                            return data.Buttons;
                        else
                            return "";
                    }
                }
            ]
        });
    </script>
}
