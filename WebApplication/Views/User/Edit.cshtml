@model DataAccess.ViewModels.ApplicationUserEdit;

@{ Layout = "~/Views/Shared/_Layout.cshtml"; }


<div class="row">
    <div class="col-md-1"> </div>
    <div class="col-md-6" style="margin-top:5%;">
        <div class="box box-danger">

            <div class="box-header">
                <h3 class="box-title">@ViewData["Title"]</h3>
                <div class="pull-right">
                    <button asp-action="Index" class="btn btn-primary">Πίσω στην λίστα</button>
                </div>
            </div>

            <hr />

            <form asp-controller="User" asp-action="Edit" method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="Id" />
                <input type="hidden" asp-for="CreatedBy_Id" />

                <div class="box-body">

                    <div class="form-group">
                        <label asp-for="FirstName" class="control-label"></label>
                        <div class="input-group">
                            @if (Model.IsEmployee)
                            {
                <input asp-for="FirstName" class="form-control" readonly />}
            else
            { <input asp-for="FirstName" class="form-control" />}
                        </div>
                        <span asp-validation-for="FirstName" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="LastName" class="control-label"></label>
                        <div class="input-group">
                            @if (Model.IsEmployee)
                            {
                <input asp-for="LastName" class="form-control" readonly />}
            else
            { <input asp-for="LastName" class="form-control" />}
                            <span asp-validation-for="LastName" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="form-group">
                        <label asp-for="UserName" class="control-label"></label>
                        <div class="input-group">
                            <input asp-for="UserName" class="form-control" />
                            <span asp-validation-for="UserName" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="form-group">
                        <label asp-for="Email" class="control-label"></label>
                        <div class="input-group">
                            <input asp-for="Email" class="form-control" />
                            <span asp-validation-for="Email" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="form-group">
                        <label asp-for="BirthDay" class="control-label"></label>
                        <div class="input-group">
                            <input asp-for="BirthDay" class="form-control" />
                            <span asp-validation-for="BirthDay" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="form-group">
                        <label asp-for="IsEmployee" class="control-label"></label>
                        <div class="input-group">
                            <input type="checkbox" asp-for="IsEmployee" class="form-control IsEmployeeSlider" />
                            <span asp-validation-for="IsEmployee" class="text-danger"></span>
                        </div>
                    </div>

                    @if (Model.IsEmployee)
                    {

        <div class="form-group" id="EmployeeIdDiv">
            <label asp-for="EmployeeId" class="control-label"></label>
            <div class="input-group" style="width:100%">
                <select class="Employee_Select2" asp-for="EmployeeId" style="width:50%">
                    @if (Model.EmployeeId != null)
                    {
    <option value="@Model.EmployeeId" selected="selected">@Model.EmployeeOption</option>
}
                </select>
                <span asp-validation-for="EmployeeId" class="text-danger"></span>
            </div>
        </div>}
    else
    {
<div class="form-group" id="EmployeeIdDiv" style="display:none;">
    <label asp-for="EmployeeId" class="control-label"></label>
    <div class="input-group" style="width:100%">
        <select class="Employee_Select2" asp-for="EmployeeId" style="width:50%">
            }
        </select>
        <span asp-validation-for="EmployeeId" class="text-danger"></span>
    </div>
</div>}

                    <div class="form-group">
                        <label asp-for="CreatedBy_FullName" class="control-label"></label>
                        <div class="input-group">
                            <input asp-for="CreatedBy_FullName" class="form-control" readonly />
                        </div>
                    </div>

                    <div class="form-group">
                        <label asp-for="CreatedOn" class="control-label"></label>
                        <div class="input-group">
                            <input asp-for="CreatedOn" class="form-control" readonly />
                        </div>
                    </div>

                    <hr />

                    <div class="form-group pull-right">
                        <input type="submit" value="Αποθήκευση" class="btn btn-primary " />
                    </div>
                </div>
            </form>
        </div>
    </div>
    <div class="col-md-4" style="margin-top:5%;">

        <div class="row">
            <div class="box box-danger">
                <div class="box-header">
                    <h3 class="box-title">Επαναφορά κωδικού χρήστη</h3>
                </div>
                <hr />
                <div class="box-body">
                    <h4 class="box-body">Στο επόμενο login που θα κανει ο χρήστης θα του ζητηθεί να αλλάξει κωδικό</h4>
                    <div style="display: flex; justify-content: center; align-items: center;">
                        <button class="btn btn-warning" id="UserPasswordReset">Επαναφορά κωδικού</button>
                    </div>
                </div>
            </div>
        </div>

        @*<div class="row">
                <div class="box box-danger">
                    <div class="box-header">
                        <h3 class="box-title">Tags</h3>
                    </div>
                    <hr />
                    <div class="box-body" id="BoxTag">
                        <h4 class="box-body">Προσθήκη βοηθητικών tags στον χρήστη</h4>
                        <div style="display: flex; justify-content: center; align-items: center;">
                            <input class="Selectize" id="Selectize" style="width:100%" />
                        </div>
                        <div class="form-group pull-right">
                            <button value="Αποθήκευση" class="btn btn-primary" id="ButtonSaveTags">Αποθήκευση</button>
                        </div>
                    </div>
                </div>
            </div>*@

        <div class="row">
            <div class="box box-danger">
                <div class="box-header">
                    <h3 class="box-title">Φιλτράρισμα αποτελεσμάτων εφαρρμογής με βάση συγκεκριμένα πόστα</h3>
                </div>
                <hr />
                <div class="box-body">
                    <div style="width:100%;" id="BoxWorkPlace">
                    </div>
                </div>
                <div class="box-footer" id="BoxWorkPlaceFooter">
                    <div class="form-group pull-right">
                        <button value="Αποθήκευση" class="btn btn-primary" id="ButtonSaveWorkPlaces">Αποθήκευση</button>
                    </div>
                </div>
            </div>
        </div>


    </div>
    <div class="col-md-1"> </div>
</div>


<div class="row">
    <div class="col-md-1"> </div>
    <div class="col-md-10">
        <div class="box box-danger" style="margin-top:5%;">
            <div class="box-header">
                <h3 class="box-title">@ViewData["UserRolesTable"]</h3>
            </div>
            <hr />
            <div class="box-body table-responsive">
                <table id="rolesDatatable" class="table table-bordered table-hover table-responsive stripe">
                    <thead>
                        <tr>
                            <th>Όνομα</th>
                            <th>Προβολή</th>
                            <th>Επεξεργασία</th>
                            <th>Δημιουργία</th>
                            <th>Απενεργοποίηση</th>
                            <th>Διαγραφή</th>
                            <th>Import</th>
                            <th>Export</th>
                        </tr>
                    </thead>
                    <tfoot>
                        <tr>
                            <th>Όνομα</th>
                            <th>Προβολή</th>
                            <th>Επεξεργασία</th>
                            <th>Δημιουργία</th>
                            <th>Απενεργοποίηση</th>
                            <th>Διαγραφή</th>
                            <th>Import</th>
                            <th>Export</th>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>
    <div class="col-md-1"> </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
         var model = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model));
       var Select2Count = 0;
        var WorkPlaceRoleIds = @Html.Raw(Json.Serialize(Model.WorkPlaceRoles))
        var UserId = @Html.Raw(Json.Serialize(Model.Id))

        const BuildUpdateWorkPlaceRolesDto = () => ({
            userId: UserId,
            workPlaceIds: new AppendListService('BoxWorkPlace').Retrieve.SelectedIds()
        });

    </script>

    <!--///////////////////////////////////////-->
    <!--///             Functions           ///-->
    <!--///////////////////////////////////////-->
    <script>


    </script>

    <!--///////////////////////////////////////-->
    <!--///               Events            ///-->
    <!--///////////////////////////////////////-->
    <script>
        //Handle show/hide Employee fields
        $('.IsEmployeeSlider').change(e => {
            if (e.target.checked) {
                document.getElementById('EmployeeIdDiv').style.display = '';
                document.getElementById('FirstName').readOnly = true;
                document.getElementById('LastName').readOnly = true;
            }
            else {
                document.getElementById('EmployeeIdDiv').style.display = 'none';
                document.getElementById('FirstName').readOnly = false;
                document.getElementById('LastName').readOnly = false;
            }
        });

        //Fill Employee fiels on Employee selection
        $('.Employee_Select2').change(e => {
            if (e.target.value != '') {
                var names = e.target.options[e.target.selectedIndex].innerText
                    .split(' ')
                    .filter(str => str.length >= 1);
                console.log(names);

                document.getElementById('FirstName').value = names[0];
                document.getElementById('LastName').value = names[1];
            }
        });


        //Save WorkPlaces
        $('#BoxWorkPlaceFooter').on('click', '#ButtonSaveWorkPlaces', e => {
            $.ajax({
                type: "POST",
                url: '/api/userrole/updateworkplaceroles',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: JSON.stringify(BuildUpdateWorkPlaceRolesDto())
            }).done(response => RefreshWorkPlaceRoles(response));
        })

        //Save Tags
        $('BoxTag').on('click', '#ButtonSaveTags', e => {
            $.ajax({
                type: "POST",
                url: '/api/usertags/UpdateUserTags',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: JSON.stringify({
                    userId: document.getElementById('Id').value,
                    values: [...document.getElementById('Selectize').value.split('_,_')]
                })
            })
        })

        //Password Reset
        $('#UserPasswordReset').on("click", e => {
            var userId = document.getElementById('Id').value;
            var apiUrl = "/api/users/resetpassword/" + userId;

            $.ajax({
                url: apiUrl,
                type: "POST",
                success: function (data, textStatus, jqXHR) {
                    console.log('success');
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log('error');
                }
            });
        });
    </script>

    <!--///////////////////////////////////////-->
    <!--///             Libraries           ///-->
    <!--///////////////////////////////////////-->
    <script>
        //IsEmploye slider
        $('.IsEmployeeSlider').bootstrapToggle({
            on: 'Ναί',
            off: 'Όχι'
        })

        //Employees Select2
        $('.Employee_Select2').select2({
            allowClear: true,
            ajax: {
                type: "POST",
                url: '/api/employees/select2',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: params => JSON.stringify({
                    search: params.term,
                    page: params.page || 1
                })
            }
        });

        //DataTable
        $(() => new DataTableService('#rolesDatatable')
                .ForApiController('role')
                .AddColumn(true, true, "GreekName")
                .AddColumn(false, false, "View")
                .AddColumn(false, false, "Edit")
                .AddColumn(false, false, "Create")
                .AddColumn(false, false, "Deactivate")
                .AddColumn(false, false, "Delete")
                .AddColumn(false, false, "Import")
                .AddColumn(false, false, "Export")
                .AjaxData((data, type, row, meta) => {
                     data.Predicate='UserEdit'
                     data.userId = '@Model.Id';
                    return JSON.stringify(data);
                })
                .FnDrawCallback(() =>
                    $('.ToggleSliders').bootstrapToggle({
                        on: 'Ναί',
                        off: 'Όχι'
                    }))
                .CompleteDataTable())



            //Append existing workplaces
        $(() =>
            new AppendListService('BoxWorkPlace')
                .Init()
                .ForApiController('WorkPlaces')
                .SetTitle('Προσθήκη πόστου')
                .SetEditState(true)
                .AppendExistingIds([...WorkPlaceRoleIds].map(x => x.workPlaceId))
                .Complete())

        const RefreshWorkPlaceRoles = response => {
        console.log(response);

            new AppendListService('BoxWorkPlace')
                .Init()
                .ForApiController('WorkPlaces')
                .SetTitle('Προσθήκη πόστου')
                .SetEditState(true)
                .AppendExistingIds(response)
                .Complete();
        }
    </script>


    <script>


        $('#rolesDatatable').on("change", ".ToggleSliders", (data) => {
            var userId = data.target.attributes['userid'].nodeValue;
            var roleId = data.target.attributes['roleid'].nodeValue;
            var apiUrl = "/api/userrole/delete/" + userId + "/" + roleId;

            if (data.target.checked)
                apiUrl = "/api/userrole/add/" + userId + "/" + roleId;

            $.ajax({
                url: apiUrl,
                type: "POST",
                success: function (data, textStatus, jqXHR) {
                    console.log('success');
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log('error');
                }
            });
        });

    </script>


}
