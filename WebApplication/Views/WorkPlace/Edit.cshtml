@model DataAccess.Models.Entity.WorkPlace

@{ Layout = "~/Views/Shared/_Layout.cshtml"; }


<div class="row">
    <div class="col-md-3"> </div>
    <div class="col-md-6">

        <div class="box box-danger" style="margin-top:5%;">

            <div class="box-header">
                <h3 class="box-title">@ViewData["Title"]</h3>
                <div class="pull-right">
                    @Html.ButtonBackToList("WorkPlace")
                </div>
            </div>

            <hr />

            <form asp-controller="WorkPlace" asp-action="Edit" method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="Id" />
                <input type="hidden" asp-for="IsActive" />
                <input type="hidden" asp-for="CreatedBy_Id" />

                <div class="box-body">

                    <div class="form-group">
                        <label asp-for="Title" class="control-label"></label>
                        <div class="input-group">
                            <input asp-for="Title" class="form-control" />
                            <span asp-validation-for="Title" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="form-group">
                        <label asp-for="Description" class="control-label"></label>
                        <div class="input-group">
                            <textarea asp-for="Description" class="form-control"></textarea>
                            <span asp-validation-for="Description" class="text-danger"></span>
                        </div>
                    </div>

                    @if (Model.Customer != null)
                    {
        <div class="form-group">
            <label asp-for="CustomerId" class="control-label"></label>
            <div class="input-group">
                <input asp-for="Customer.IdentifyingName" class="form-control" readonly />
            </div>
        </div>}

                    <div class="form-group">
                        <label asp-for="CreatedBy_FullName" class="control-label"></label>
                        <div class="input-group">
                            <input asp-for="CreatedBy_FullName" class="form-control" readonly />
                        </div>
                    </div>

                    <div class="form-group">
                        <label asp-for="CreatedOn" class="control-label"></label>
                        <div class="input-group">
                            <input asp-for="CreatedOn" class="form-control" readonly />
                        </div>
                    </div>

                    <hr />

                    <div class="form-group pull-right">
                        <input type="submit" value="Αποθήκευση" class="btn btn-primary " />
                    </div>

                </div>
            </form>

        </div>
    </div>
    <div class="col-md-3"> </div>
</div>

<div class="row">
    <div class="col-md-1"> </div>
    <div class="col-md-10">

        <div class="box box-danger" style="margin-top:5%;">

            <div class="box-header">
                <h3 class="box-title">@ViewData["EmployeeDataTable"]</h3>
            </div>
            <hr />
            <div style="width:100%; padding-left:5%;">
                <div style="width:100%; float:left;">
                    <div class="form-group">
                        <label class="control-label">Εμφάνιση ΜΟΝΟ ενταγμένων υπαλλήλων</label>&nbsp
                        <input type="checkbox" class="filterSlider" id="SliderFilter" checked>
                    </div>
                </div>
            </div>
            <hr />
            <div class="box-body table-responsive">

                <table id="WorkPlaceEmployeesDatatable" class="table table-bordered table-hover table-responsive stripe">
                    <thead>
                        <tr>
                            <th>Όνομα</th>
                            <th>Επίθετο</th>
                            <th>ErpCode</th>
                            <th>ΑΦΜ</th>
                            <th>Ειδικότητα</th>
                            <th>Εταιρία</th>
                            <th>Εργαζόμενοι πόστου</th>
                        </tr>
                    </thead>
                    <tfoot>
                        <tr>
                            <th>Όνομα</th>
                            <th>Επίθετο</th>
                            <th>ErpCode</th>
                            <th>ΑΦΜ</th>
                            <th>Ειδικότητα</th>
                            <th>Εταιρία</th>
                            <th>Εργαζόμενοι πόστου</th>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>
    <div class="col-md-1"> </div>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        $('.Customer_Select2').select2({
            ajax: {
                url: '/api/customers/select2',
                data: function (params) {
                    var query = {
                        search: params.term,
                        page: params.page || 1
                    }
                    return query;
                }
            }
        });

        $('.filterSlider').bootstrapToggle({
            on: 'Ναί',
            off: 'Όχι'
        })


        $(() => new DataTableService('#WorkPlaceEmployeesDatatable')
            .ForApiController('employees')
            .AddColumn(true, true, "FirstName")
            .AddColumn(true, true, "LastName")
            .AddColumn(true, true, "ErpCode")
            .AddColumn(true, true, "VatNumber")
            .AddColumn(true, true, "ScpecializationName")
            .AddColumn(true, true, "CompanyTitle")
            .AddColumn(true, true, "IsInWorkPlace")
            .AjaxData((data, type, row, meta) => {
                data.predicate = 'WorkPlaceEdit';
                data.genericId =@Model.Id;
                data.filterByIncludedEmployees = GetSliderFilterValue();
                return JSON.stringify(data);
            })
            .FnDrawCallback(() =>
                $('.ToggleSliders').bootstrapToggle({
                    on: 'Ναί',
                    off: 'Όχι'
                }))
            .CompleteDataTable());
    </script>

    <script>
        $('#WorkPlaceEmployeesDatatable').on('change', '.ToggleSliders', (element) => {
            var apiUrl = element.target.getAttribute('urlattr');
            console.log(apiUrl);
            $.ajax({
                type: "GET",
                url: apiUrl + element.target.checked,
                dataType: "json",
                success: function (response) {
                    console.log('mmmkeyyyyy');
                }
            });
        });


        const GetSliderFilterValue = () =>
            document.getElementById('SliderFilter').checked != true;

        $('.filterSlider').change(e =>
            $('#WorkPlaceEmployeesDatatable').DataTable().ajax.reload());
    </script>
}
