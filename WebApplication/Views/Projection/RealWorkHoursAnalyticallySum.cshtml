@{ Layout = "~/Views/Shared/_Layout.cshtml"; }

<div class="row">
    <div class="col-md-3"> </div>
    <div class="col-md-6">
        <div class="box box-danger" style="margin-top:5%;">

            <div class="box-header">
                <h3 class="box-title">@ViewData["Filter"]</h3>
            </div>

            <hr />


            <div class="box-body">
                <div style="width:100%;">
                    <div style="width:50%; float:left;">
                        <div class="form-group">
                            <label class="control-label">Πόστο</label>
                            <div class="input-group" style="width:100%">
                                <select id="WorkPlace_Select2" style="width:70%"></select>
                            </div>
                        </div>

                    </div>
                    <div style="width:50%; float:left;">
                        <label class="control-label">Χρονικό έυρος</label>
                        <div class="input-group">
                            <input id="SearchRangeInput" class="form-control" />
                        </div>

                    </div>
                </div>
                <div style="width:100%;">
                    <div style="width:100%; float:left;">
                        <div class="form-group">
                            <label class="control-label">Τρόπος εμφάνισης χρόνου</label>&nbsp
                            <input type="checkbox" class="filterSlider" id="SliderHourChoice">
                        </div>
                    </div>
                </div>


            </div>
        </div>
    </div>
    <div class="col-md-3"> </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="box box-danger" style="margin-top:5%;">
            <div class="box-header">
                <h3 class="box-title">@ViewData["Title"]</h3>
            </div>
            <hr />
            <div id="DataTableDiv"></div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const ConvertDateForApi = timeStamp =>
            CompleteTimeWithZerosForApiPost(new Date(parseInt(timeStamp)));

        CompleteTimeWithZerosForApiPost = date => {
            var year = date.getFullYear();
            var month = String((date.getMonth() + 1)).length == 1 ?
                '0' + (date.getMonth() + 1) : (date.getMonth() + 1);
            var day = String(date.getDate()).length == 1 ?
                '0' + date.getDate() : date.getDate();
            var hour = String(date.getHours()).length == 1 ?
                '0' + date.getHours() : date.getHours();
            var min = String(date.getMinutes()).length == 1 ?
                '0' + date.getMinutes() : date.getMinutes();

            return year + '-' + month + '-' + day + 'T' + hour + ':' + min;
        }
        const GetSelectedWorkPlaceId = () =>
            document.getElementById('WorkPlace_Select2').value;

        const GetSliderHourChoiceValue = () =>
            document.getElementById('SliderHourChoice').checked != true;

        const GetStartOn = () =>
            new Date(moment(document.getElementById('SearchRangeInput').value
                .split('/-/')[0], 'DD/MM/YYYY').format('MM/DD/YYYY HH:mm'));

        const GetEndOn = () => {

            var date = new Date(moment(document.getElementById('SearchRangeInput').value
                .split('/-/')[1], 'DD/MM/YYYY').format('MM/DD/YYYY HH:mm'));
            date.setHours(23, 59, 59, 59);
            return new Date(date);
        }

        const GetDaysDifferenceFromRange = () =>
            Math.ceil(Math.abs(GetEndOn() - GetStartOn()) / (1000 * 60 * 60 * 24))

        const setHoursToMax = date => {
            var newDate = new Date(date);
            newDate.setHours(23, 59, 59);
            return moment(newDate);
        }

        var DestroyDataTable = () => $('#RealWorkHoursAnalyticallySumDatatable')
            .DataTable().destroy();

        const GetDaysColumns = () => {
            var thElements = '';
            for (var i = 0; i < GetDaysDifferenceFromRange(); i++) {
                var colDate = GetStartOn();
                colDate.setDate(colDate.getDate() + i);
                thElements = thElements + CreateThElement(colDate);
            }
            return thElements;
        };

        const CreateThElement = (date) =>
            '<th style="white-space: nowrap;">' +
            moment(date, 'YYYY/MM/DD HH:mm:ss').lang("el").format("MMM") +
            ' ' +
            date.getDate() +
            ' ' +
            moment(date, 'YYYY/MM/DD HH:mm:ss').lang("el").format("dddd") +
            '</th>';

        const DeleteDataTableHTML = () =>
            document.getElementById('RealWorkHoursAnalyticallySumDatatable').remove();
    </script>

    <script>
        $('#SliderHourChoice').bootstrapToggle({
            on: 'HH:mm',
            off: 'ώρες/8',
            onstyle: 'primary',
            offstyle: 'primary'
        });

        $('.filterSlider').change(e =>
            $('#RealWorkHoursAnalyticallySumDatatable').DataTable().ajax.reload());

        $('#WorkPlace_Select2').select2({
            placeholder: "Επέλεξε πόστο",
            allowClear: true,
            ajax: {
                url: '/api/workplaces/select2',
                data: function (params) {
                    var query = {
                        search: params.term,
                        page: params.page || 1
                    }
                    return query;
                }
            }
        }).on('change', () =>
            $('#RealWorkHoursAnalyticallySumDatatable').DataTable().ajax.reload());

        $('#SearchRangeInput').calentim({
            showTimePickers: false,
            startOnMonday: true,
            showFooter: false,
            calendarCount: 1,
            startDate: Date.now(),
            endDate: Date.now(),
            format: "DD/MM/YYYY",
            dateSeparator: '/-/',
            locale: "el",
            onafterselect: () => {
                DestroyDataTable();
                DeleteDataTableHTML();
                AppendNewDataTableHTML();
                CreateDataTable();
            },
            onaftershow: () =>
                //Fix Calentim width
                [...document.getElementsByClassName('calentim-input')]
                    .forEach((calentim) =>
                        calentim.setAttribute('style', 'width: 400px;'))
        });

        var CreateDataTable = () =>
            new DataTableService('#RealWorkHoursAnalyticallySumDatatable')
                .ForApiController('projections')
                .AddColumn(true, true, "LastName")
                .AddColumn(true, true, "FirstName")
                .AddColumn(true, true, "ErpCode")
                .AddColumnsFromDateRange(GetStartOn(), GetEndOn(), "Day_")
                .AjaxData((data, type, row, meta) => {
                    data.predicate = 'ProjectionRealWorkHoursAnalyticallySum';
                    if (GetSelectedWorkPlaceId() != '')
                        data.filterByWorkPlaceId = GetSelectedWorkPlaceId();
                    data.StartOn = ConvertDateForApi(GetStartOn().valueOf());
                    data.EndOn = ConvertDateForApi(GetEndOn().valueOf());
                    data.ShowHoursInPercentage = GetSliderHourChoiceValue();
                    return JSON.stringify(data);
                })
                .FooterCallback((row, data, start, end, display) => {
                    //for all columns except static ones
                    for (var i = 0; i < row.children.length - 3; i++) {
                        row.children[i + 3].innerHTML = "  Σύνολο: " + data[0]['Day_' + i + '_FooterTotal'];
                        console.log(data[i]['Day_' + i + '_FooterTotal']);

                    }
                })
                .CompleteDataTable();

        const AppendNewDataTableHTML = () =>
            document.getElementById('DataTableDiv').insertAdjacentHTML('beforeend', '' +
                '<div class="box-body table-responsive">' +
                '<table id="RealWorkHoursAnalyticallySumDatatable" class="table table-bordered table-hover table-responsive stripe">' +
                '<thead>' +
                '<tr>' +
                '<th>Επίθετο</th>' +
                '<th>Όνομα</th>' +
                '<th>Erp Code</th>' +
                GetDaysColumns() +
                '</tr>' +
                '</thead>' +
                '<tfoot>' +
                '<tr>' +
                '<th>Επίθετο</th>' +
                '<th>Όνομα</th>' +
                '<th>Erp Code</th>' +
                GetDaysColumns() +
                '</tr>' +
                '</tfoot>' +
                '</table>' +
                '</div>' +
                '');

        $(document).ready(AppendNewDataTableHTML());
        $(document).ready(CreateDataTable());
    </script>
}
