@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<div class="row">
    <div class="col-md-3"> </div>
    <div class="col-md-6">
        <div class="box box-danger" style="margin-top:5%;">

            <div class="box-header">
                <h3 class="box-title">@ViewData["Filter"]</h3>
            </div>

            <hr />


            <div class="box-body">
                <div style="width:100%;">
                    <div style="width:50%; float:left;">
                        <div class="form-group">
                            <label class="control-label">Πόστο</label>
                            <div class="input-group" style="width:100%">
                                <select id="WorkPlace_Select2" style="width:70%"></select>
                            </div>
                        </div>
                    </div>
                    <div style="width:50%; float:left;">
                        <div style="width:80%; float:left;">
                            <label class="control-label">Χρονικό έυρος</label>
                        </div>
                        <div style="width:20%; float:left;">
                            <button type="button" id="AppendCalentim" class="btn btn-success"><i class="fa fa-plus"></i></button>
                        </div>
                        <div style="width:100%; float:left;">
                        <div id="CalentimDiv"></div>
                        </div>
                    </div>
                </div>
             

            </div>
        </div>
    </div>
    <div class="col-md-3"> </div>
</div>


<div class="row">
    <div class="col-md-12">
        <div class="box box-danger" style="margin-top:5%;">
            <div class="box-header">
                <h3 class="box-title"></h3>
            </div>
            <hr />
            <div id="DataTableDiv"></div>
        </div>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    <script>

        var Count = 0;
        const ConvertDateForApi = timeStamp =>
            CompleteTimeWithZerosForApiPost(new Date(parseInt(timeStamp)));

        CompleteTimeWithZerosForApiPost = date => {
            var year = date.getFullYear();
            var month = String((date.getMonth() + 1)).length == 1 ?
                '0' + (date.getMonth() + 1) : (date.getMonth() + 1);
            var day = String(date.getDate()).length == 1 ?
                '0' + date.getDate() : date.getDate();
            var hour = String(date.getHours()).length == 1 ?
                '0' + date.getHours() : date.getHours();
            var min = String(date.getMinutes()).length == 1 ?
                '0' + date.getMinutes() : date.getMinutes();

            return year + '-' + month + '-' + day + 'T' + hour + ':' + min;
        }
        const GetSelectedWorkPlaceId = () =>
            document.getElementById('WorkPlace_Select2').value;

        const GetSliderHourChoiceValue = () =>
            document.getElementById('SliderHourChoice').checked != true;

        const GetStartOn = () =>
            new Date(moment(document.getElementById('SearchRangeInput').value
                .split('/-/')[0], 'DD/MM/YYYY').format('MM/DD/YYYY HH:mm'));

        const GetEndOn = () => {

            var date = new Date(moment(document.getElementById('SearchRangeInput').value
                .split('/-/')[1], 'DD/MM/YYYY').format('MM/DD/YYYY HH:mm'));
            date.setHours(23, 59, 59, 59);
            return new Date(date);
        }

        const GetDaysDifferenceFromRange = () =>
            Math.ceil(Math.abs(GetEndOn() - GetStartOn()) / (1000 * 60 * 60 * 24))

        const setHoursToMax = date => {
            var newDate = new Date(date);
            newDate.setHours(23, 59, 59);
            return moment(newDate);
        }

        const CreateDatatableColumns = () => {
            var columns = []
            columns.push({
                data: "FirstName",
                searchable: false,
                orderable: true,
                render: (a, b, data, d) => RenderDataFromDatatable(data,
                    'FirstName')
            });
            columns.push({
                data: "LastName",
                searchable: false,
                orderable: true,
                render: (a, b, data, d) => RenderDataFromDatatable(data,
                    'LastName')
            });
            columns.push({
                data: "ErpCode",
                searchable: false,
                orderable: true,
                render: (a, b, data, d) => RenderDataFromDatatable(data,
                    'ErpCode')
            });
            columns.push({
                data: "ΑΦΜ",
                searchable: false,
                orderable: true,
                render: (a, b, data, d) => RenderDataFromDatatable(data,
                    'ΑΦΜ')
            });
            columns.push({
                data: "Σήμερα",
                searchable: false,
                orderable: true,
                render: (a, b, data, d) => RenderDataFromDatatable(data,
                    'Σήμερα')
            });

            return columns;
        }
        const RenderDataFromDatatable = (data, property) => {
            if (data[property] != null)
                return data[property];
            else
                return "";
        }

        $('#AppendCalentim').on('click', (e) => {
            Count++;
            AppendNewCalentimHTML(Count);
            InitiateCalentim(Count);
        });

        $(document).on('click', '.DeleteCalentimButton',(e) =>
            document.getElementById('CalnentimDivNum_' + e.target.id.split('_')[1])
                .remove())
    </script>
    <script>

        $('#WorkPlace_Select2').select2({
            ajax: {
                url: '/api/workplaces/select2',
                data: function (params) {
                    var query = {
                        search: params.term,
                        page: params.page || 1
                    }
                    return query;
                }
            }
        }).on('change', () =>
            $('#RealWorkHoursSpecificDatesDatatable').DataTable().ajax.reload());

        const InitiateCalentim = num=>
            $('#CalnentimNum_'+num).calentim({
                showTimePickers: false,
                startOnMonday: true,
                showFooter: false,
                calendarCount: 1,
                //startDate:  Date.now(),
                //endDate:  Date.now(),
                format: "DD/MM/YYYY",
                dateSeparator: '/-/',
                locale: "el",
                disableOnlyEnd: true,
                disabledRanges: [
                    {
                        "start": moment("01/01/1920", "DD/MM/YYYY"),
                        "end": moment("31/12/2050", "DD/MM/YYYY")
                    }
                ],
                onaftershow: () =>
                    //Fix Calentim width
                    [...document.getElementsByClassName('calentim-input')]
                        .forEach((calentim) =>
                            calentim.setAttribute('style', 'width: 400px;'))
            });


        $('#RealWorkHoursSpecificDatesDatatable').DataTable({
                serverSide: true,
                colReorder: true,
                dom: 'frtlp',
                ajax: {
                    url: '/api/employees/datatable',
                    type: 'POST',
                    contentType: "application/json",
                    data: (data, type, row, meta) => {

                        data.predicate = 'ProjectionConcentric';
                        if (GetSelectedWorkPlaceId() != '')
                            data.genericId = GetSelectedWorkPlaceId();
                        data.StartOn = ConvertDateForApi(GetStartOn().valueOf());
                        data.EndOn = ConvertDateForApi(GetEndOn().valueOf());
                        data.ShowHoursInPercentage = GetSliderHourChoiceValue();
                        return JSON.stringify(data);
                    }
                },
                order: [[1, 'desc']],
                columns: CreateDatatableColumns()
            });

        

        const AppendNewDataTableHTML = () => 
            document.getElementById('DataTableDiv').insertAdjacentHTML('beforeend',''+
                '<div class="box-body table-responsive">'+
                    '<table id="EmployeesWorkHourConcentricDatatable" class="table table-bordered table-hover table-responsive">'+
                        '<thead>'+
                            '<tr>'+
                                '<th>Όνομα</th>'+
                                '<th>Επίθετο</th>'+
                                '<th>Erp Code</th>'+
                                '<th>ΑΦΜ</th>'+
                                '<th>Σήμερα</th>'+
                            '</tr>'+
                        '</thead>'+
                        '<tfoot>'+
                            '<tr>'+
                                '<th>Όνομα</th>'+
                                '<th>Επίθετο</th>'+
                                '<th>Erp Code</th>'+
                                '<th>ΑΦΜ</th>'+
                                '<th>Σήμερα</th>'+
                            '</tr>'+
                        '</tfoot>'+
                    '</table>'+
                '</div>'+
                '');

           const AppendNewCalentimHTML = num => 
               document.getElementById('CalentimDiv').insertAdjacentHTML('beforeend',''+
                '<div  id="CalnentimDivNum_'+num+'">'+
                    '<div style="width:70%;float:left">'+
                        '<div class="input-group">'+
                           '<input  id="CalnentimNum_' + num +'" class="form-control" />'+
                        '</div>'+
                    '</div>'+
                    '<div style="width:30%; float:left">'+
                   '<button type="button"  id="DeleteCalentimButtonNum_' + num + '" class="btn btn-danger DeleteCalentimButton"><i class="fa fa-trash DeleteCalentimButton" id="DeleteCalentimINum_' + num +'"></i></button>'+
                    '</div>'+
                '</div>'+
                '');

    

        $(document).ready(AppendNewDataTableHTML());

    </script>
}
