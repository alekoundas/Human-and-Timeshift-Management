@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<div class="row">
    <div class="col-md-3"> </div>
    <div class="col-md-6">
        <div class="box box-danger" style="margin-top:5%;">

            <div class="box-header">
                <h3 class="box-title">@ViewData["Filter"]</h3>
            </div>

            <hr />


            <div class="box-body">
                <div style="width:100%;">
                    <div style="width:50%; float:left;">
                        <div class="form-group">
                            <label class="control-label">Πόστο</label>
                            <div class="input-group" style="width:100%">
                                <select id="WorkPlace_Select2" style="width:70%"></select>
                            </div>
                        </div>

                    </div>
                    <div style="width:50%; float:left;">
                        <label class="control-label">Χρονικό έυρος</label>
                        <div class="input-group">
                            <input id="SearchRangeInput" class="form-control" />
                        </div>

                    </div>
                </div>
                <div style="width:100%;">
                    <div style="width:100%; float:left;">
                        <div class="form-group">
                            <label class="control-label">Ανα χρονόγραμμα</label>&nbsp
                            <input type="checkbox" class="filterSlider" id="SliderWorkHour">
                        </div>  
                    </div>
                    <div style="width:100%; float:left;">
                        <label class="control-label">Ανα πραγματική</label>&nbsp
                        <input type="checkbox"class="filterSlider" id="SliderRealWorkHour">
                    </div>
                </div>


            </div>
        </div>
    </div>
    <div class="col-md-3"> </div>
</div>


<div class="row">
    <div class="col-md-12">
        <div class="box box-danger" style="margin-top:5%;">
            <div class="box-header">
                <h3 class="box-title"></h3>
            </div>
            <hr />
            <div class="box-body table-responsive">
                <table id="EmployeesWorkHourDifferenceDatatable" class="table table-bordered table-hover table-responsive">
                    <thead>
                        <tr>
                            <th></th>
                            <th>Όνομα</th>
                            <th>Επίθετο</th>
                            <th>Βάρδια χρονογράμματος</th>
                            <th>Βάρδια πραγματική</th>
                        </tr>
                    </thead>
                    <tfoot>
                        <tr>
                            <th></th>
                            <th>Όνομα</th>
                            <th>Επίθετο</th>
                            <th>Βάρδια Χρονογράμματος</th>
                            <th>Βάρδια πραγματική</th>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        const GetSelectedWorkPlaceId = () =>
            document.getElementById('WorkPlace_Select2').value;

        const GetSliderWorkHourValue = () =>
            document.getElementById('SliderWorkHour').checked == true;

        const GetSliderRealWorkHourValue = () =>
            document.getElementById('SliderRealWorkHour').checked == true;

        const GetStartOn = () =>
            moment(document.getElementById('SearchRangeInput').value
                .split('/-/')[0], 'DD/MM/YYYY').format('MM/DD/YYYY HH:mm');

        const GetEndOn = () => {

            var date = new Date(moment(document.getElementById('SearchRangeInput').value
                .split('/-/')[1], 'DD/MM/YYYY').format('MM/DD/YYYY HH:mm'));
            date.setHours(23, 59, 59, 59);
            return date
        }

        const setHoursToMax = date => {
            var newDate = new Date(date);
            newDate.setHours(23, 59, 59);
            return moment(newDate);
        }
    </script>
    <script>
        $('#WorkPlace_Select2').select2({
            ajax: {
                url: '/api/workplaces/select2',
                data: function (params) {
                    var query = {
                        search: params.term,
                        page: params.page || 1
                    }
                    return query;
                }
            }
        }).on('change', () =>
            $('#EmployeesWorkHourDifferenceDatatable').DataTable().ajax.reload());

        $('#SliderWorkHour').bootstrapToggle({
            on: '',
            off: ''
        });

        $('#SliderRealWorkHour').bootstrapToggle({
            on: '',
            off: ''
        });

        

        $('.filterSlider').change(e => $('#EmployeesWorkHourDifferenceDatatable').DataTable().ajax.reload());
        //$('#SliderRealWorkHour').change(() => $('#SliderWorkHour').bootstrapToggle('off'));
        //$('#SliderRealWorkHour').change(() => $('#SliderWorkHour').bootstrapToggle('off'));

        $('#SearchRangeInput').calentim({
            showTimePickers: false,
            startOnMonday: true,
            showFooter: false,
            calendarCount: 1,
            format: "DD/MM/YYYY",
            dateSeparator: '/-/',
            locale: "el",
            onafterselect: () =>
                $('#EmployeesWorkHourDifferenceDatatable').DataTable().ajax.reload(),
            onaftershow: () =>
                //Fix Calentim width
                [...document.getElementsByClassName('calentim-input')]
                    .forEach((calentim) =>
                        calentim.setAttribute('style', 'width: 400px;'))
        });

        var table = $('#EmployeesWorkHourDifferenceDatatable').DataTable({
            serverSide: true,
            responsive: true,
            colReorder: true,
            processing: true,
        buttons: ['copy', 'csv', 'excel', 'pdf', 'print'],
            dom: 'Bfrtlp',
            ajax: {
                url: '/api/employees/datatable',
                type: 'POST',
                contentType: "application/json",
                data: (data, type, row, meta) => {

                    data.predicate = 'ProjectionDifference';
                    if (GetSelectedWorkPlaceId() != '')
                        data.genericId = GetSelectedWorkPlaceId();
                    data.StartOn = GetStartOn();
                    data.EndOn = GetEndOn();
                    data.filterByWorkHour = GetSliderWorkHourValue();
                    data.filterByRealWorkHour = GetSliderRealWorkHourValue();

                    return JSON.stringify(data);
                }
            },
            order: [[1, 'desc']],
            columns: [
                {
                    className: 'details-control',
                    orderable: false,
                    data: null,
                    defaultContent: ''
                },
                {
                    data: "FirstName",
                    searchable: true,
                    orderable: true,
                    render: (a, b, data, d) => {
                        //console.log(data);
                        if (data.FirstName != null)
                            return data.FirstName;
                        else
                            return "";
                    }
                },
                {
                    data: "LastName",
                    searchable: false,
                    orderable: true,
                    render: (a, b, data, d) => {
                        if (data.LastName != null)
                            return data.LastName;
                        else
                            return "";
                    }
                },
                {
                    data: "WorkHourDate",
                    searchable: false,
                    orderable: true,
                    render: (a, b, data, d) => {
                        if (data.WorkHourDate != null)
                            return data.WorkHourDate;
                        else
                            return "";
                    }
                },
                {
                    data: "RealWorkHourDate",
                    searchable: false,
                    orderable: true,
                    render: (a, b, data, d) => {
                        if (data.RealWorkHourDate != null)
                            return data.RealWorkHourDate;
                        else
                            return "";
                    }
                }
            ]
        });
        // Add event listener for opening and closing details
        $('#EmployeesWorkHourDifferenceDatatable tbody').on('click', 'td.details-control', function () {
            var tr = $(this).closest('tr');
            var row = table.row(tr);

            if (row.child.isShown()) {
                // This row is already open - close it
                row.child.hide();
                tr.removeClass('shown');
            }
            else {
                // Open this row
                row.child(format(row.data())).show();
                tr.addClass('shown');
            }
        });
        function format(data) {
            console.log(data);
            var html = '<p>Συνολικά προβλήματα υπαλλήλου</p>' +
                '<div style="width:100%">' +
                '<div style="float:left; width:50% ">' +
                '<table cellpadding = "5" cellspacing = "0" border = "0" style = "padding-left:50px;" > ';

            data.WorkHours.forEach(workHour => html += GetWorkHourRows(workHour));
            html += '</table>' +
                '</div>' +
                '<div style="float:left; width:50%">' +
                '<table cellpadding = "5" cellspacing = "0" border = "0" style = "padding-left:50px;" > ';
            data.RealWorkHours.forEach(realWorkHour => html += GetRealWorkHourRows(realWorkHour));

            '</table>' +
                '</div>' +
                '</div>';
            return html;
        }
        const GetWorkHourRows = dateObj => '<tr>' +
            '<td>Χρονόγραμα:</td>' +
            '<td>' + dateObj.startOn + '</td>' +
            '<td>' + dateObj.endOn + '</td>' +
            '</tr>';
        const GetRealWorkHourRows = dateObj => '<tr>' +
            '<td>Πραγματική:</td>' +
            '<td>' + dateObj.startOn + '</td>' +
            '<td>' + dateObj.endOn + '</td>' +
            '</tr>';

    </script>
}
