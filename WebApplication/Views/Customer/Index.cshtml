@model IEnumerable<DataAccess.Models.Entity.Customer>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="row">
    <div class="col-md-3"> </div>
    <div class="col-md-6">


        <div class="box box-danger" style="margin-top:5%;">

            <div class="box-header">
                <h3 class="box-title">@ViewData["Title"]</h3>
                <div class="pull-right">
                    @Html.ButtonCreateNew("Customer")
                </div>
            </div>
            <hr />
            <div class="box-body table-responsive">

                <table id="CustomersDatatable" class="table table-bordered table-hover table-responsive">
                    <thead>
                        <tr>
                            <th>Όνομα</th>
                            <th>Επίθετο</th>
                            <th>ΑΦΜ</th>
                            <th>Ενέργειες</th>
                        </tr>
                    </thead>
                    <tfoot>
                        <tr>
                            <th data-searchable="true">Όνομα</th>
                            <th data-searchable="false">Επίθετο</th>
                            <th data-searchable="false">ΑΦΜ</th>
                            <th data-searchable="false">Ενέργειες</th>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>

    <div class="col-md-3"> </div>

</div>

@section Scripts {
    <script src="~/js/Custom/DatatableDeleteButton.js"></script>
    <script>

        $('#CustomersDatatable').DataTable({
            serverSide: true,
            responsive: true,
            colReorder: true,
            processing: true,
            dom: 'Bfrtlp',
            buttons: ['excel', 'print'],
            language: {
                processing: '<i class="fa fa-spinner fa-spin fa-3x fa-fw"></i><span class="sr-only"></span> '
            },
            ajax: {
                url: '/api/customers/datatable',
                type: 'POST',
                contentType: "application/json",
                data: (data, type, row, meta) => {
                    data.Predicate = 'CustomerIndex';
                    return JSON.stringify(data);
                }
            },
            order: [[0, 'desc']],
            columns: [
                {
                    data: "FirstName",
                    searchable: true,
                    orderable: true,
                    render: (a, b, data, d) => {
                        console.log(data);
                        if (data.FirstName != null)
                            return data.FirstName;
                        else
                            return "";
                    }
                },
                {
                    data: "LastName",
                    searchable: true,
                    orderable: true,
                    render: (a, b, data, d) => {
                        if (data.LastName != null)
                            return data.LastName;
                        else
                            return "";
                    }
                },
                {
                    data: "AFM",
                    searchable: true,
                    orderable: true,
                    render: (a, b, data, d) => {
                        if (data.AFM != null)
                            return data.AFM
                        else
                            return "";
                    }
                },
                {
                    data: "Buttons",
                    searchable: false,
                    orderable: false,
                    render: (a, b, data, d) => {
                        if (data.Buttons != null)
                            return data.Buttons;
                        else
                            return "";
                    }
                }
            ]
        });
    </script>
}