@model DataAccess.Models.Entity.Company

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="row">
    <div class="col-md-3"> </div>
    <div class="col-md-6">

        <div class="box box-danger" style="margin-top:5%;">
            <div class="box-header">
                <h3 class="box-title">@ViewData["Title"]</h3>
                <div class="pull-right">
                    @Html.ButtonBackToList("Company")
                    @Html.ButtonGoToEdit("Company",Model.Id)
                </div>
            </div>

            <hr />

            <div class="box-body">

                <div class="form-group">
                    <label asp-for="Title" class="control-label"></label>
                    <div class="input-group">
                        <input asp-for="Title" class="form-control" readonly="readonly" disabled />
                    </div>
                </div>

                <div class="form-group">
                    <label asp-for="Afm" class="control-label"></label>
                    <div class="input-group">
                        <input asp-for="Afm" class="form-control" readonly="readonly" disabled />
                    </div>
                </div>

                <div class="form-group">
                    <label asp-for="Description" class="control-label"></label>
                    <div class="input-group">
                        <textarea asp-for="Description" class="form-control" readonly="readonly" disabled></textarea>
                    </div>
                </div>

            </div>
        </div>
    </div>
    <div class="col-md-3"> </div>
</div>

<div class="row">
    <div class="col-md-1"> </div>
    <div class="col-md-10">

        <div class="box box-danger" style="margin-top:5%;">

            <div class="box-header">
                <h3 class="box-title">@ViewData["EmployeeDataTable"]</h3>
            </div>
            <hr />
            <div class="box-body table-responsive">

                <table id="CompanyEmployeesDatatable" class="table table-bordered table-hover table-responsive stripe">
                    <thead>
                        <tr>
                            <th>Όνομα</th>
                            <th>Επίθετο</th>
                            <th>Email</th>
                            <th>ErpCode</th>
                            <th>ΑΦΜ</th>
                            <th>Ειδικότητα</th>
                            <th>Εταιρία</th>
                            <th>Εργαζόμενοι εταιρίας</th>
                        </tr>
                    </thead>
                    <tfoot>
                        <tr>
                            <th>Όνομα</th>
                            <th>Επίθετο</th>
                            <th>Email</th>
                            <th>ErpCode</th>
                            <th>ΑΦΜ</th>
                            <th>Ειδικότητα</th>
                            <th>Εταιρία</th>
                            <th>Εργαζόμενοι εταιρίας</th>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>
    <div class="col-md-1"> </div>
</div>



@section Scripts {

    <script>
         $('#CompanyEmployeesDatatable').DataTable({
             serverSide: true,
             responsive: true,
             colReorder: true,
             processing: true,
             iDisplayLength: 150,
             dom: 'Bfrtlp',
             buttons: ['excel', 'pdf', 'print'],
             language: {
                 processing: '<i class="fa fa-spinner fa-spin fa-3x fa-fw"></i><span class="sr-only"></span> '
             },
                ajax: {
                    url: '/api/employees/datatable',
                    type: 'POST',
                    contentType: "application/json",
                    data: (data, type, row, meta) => {

                        data.predicate = 'CompanyDetail';
                        data.genericId =@Model.Id;

                        return JSON.stringify(data);
                    }
                },
                order: [[0, 'desc']],
                columns: [
                    {
                        data: "FirstName",
                        searchable: true,
                        orderable: true,
                        render: (a, b, data, d) => {
                            //console.log(data);
                            if (data.FirstName != null)
                                return data.FirstName;
                            else
                                return "";
                        }
                    },
                    {
                        data: "LastName",
                        searchable: true,
                        orderable: true,
                        render: (a, b, data, d) => {
                            if (data.LastName != null)
                                return data.LastName;
                            else
                                return "";
                        }
                    },
                    {
                        data: "Email",
                        searchable: true,
                        orderable: true,
                        render: (a, b, data, d) => {
                            if (data.Email != null)
                                return data.Email;
                            else
                                return "";
                        }
                    },
                    {
                        data: "ErpCode",
                        searchable: true,
                        orderable: true,
                        render: (a, b, data, d) => {
                            if (data.ErpCode != null)
                                return data.ErpCode;
                            else
                                return "";
                        }
                    },
                    {
                        data: "Afm",
                        searchable: true,
                        orderable: true,
                        render: (a, b, data, d) => {
                            if (data.Afm != null)
                                return data.Afm;
                            else
                                return "";
                        }
                    },
                    {
                        data: "ScpecializationName",
                        searchable: false,
                        orderable: false,
                        render: (a, b, data, d) => {
                            if (data.ScpecializationName != null)
                                return data.ScpecializationName;
                            else
                                return "";
                        }
                    },
                    {
                        data: "CompanyTitle",
                        searchable: false,
                        orderable: false,
                        render: (a, b, data, d) => {
                            if (data.CompanyTitle != null)
                                return data.CompanyTitle;
                            else
                                return "";
                        }
                    },
                    {
                        data: "IsInCompany",
                        searchable: false,
                        orderable: false,
                        render: (a, b, data, d) => {
                            if (data.IsInCompany != null)
                                return data.IsInCompany;
                            else
                                return "";
                        }
                    }
                ],
                fnDrawCallback: function () {
                    $('.ToggleSliders').bootstrapToggle({
                        on: 'Ναί',
                        off: 'Όχι'
                    });
                },
            });
    </script>
}